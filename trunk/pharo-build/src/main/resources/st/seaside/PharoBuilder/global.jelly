<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <!--
    This Jelly script is used to produce the global configuration option.

    Hudson uses a set of tag libraries to provide uniformity in forms.
    To determine where this tag is defined, first check the namespace URI,
    and then look under $HUDSON/views/. For example, <f:section> is defined
    in $HUDSON/views/lib/form/section.jelly.

    It's also often useful to just check other similar scripts to see what
    tags they use. Views are always organized according to its owner class,
    so it should be straightforward to find them.
  -->
  <f:section title="Pharo Image Builder">
    <!--
      optional @help points to the help document HTML. /plugin/pharo-build
      is mapped to our webapp/ directory, so this is a convenient way to serve
      static resources.
    -->
      <!--
        we'll have on input field. In HTML, single "namespace" is shared between
        all form components in one <form>, so we need to choose a name that doesn't
        collide with other plugins. The 'descriptor' variable represents our descriptor
        object, so we use that to determine the initial value for this form.
      -->
      <f:entry
        title="VM executable"
        description="Path to the Pharo VM executable">
        <f:textbox name="pahrobuilder.vm"
          value="${descriptor.getVm()}"
          default="${descriptor.defaultVm()}"/>
      </f:entry>
      <f:entry title="Parameters"
        description="Parameters passed to the Pharo VM">
        <f:textbox name="pahrobuilder.parameters"
          value="${descriptor.getParameters()}"
          default="${descriptor.defaultParamters()}"/>
      </f:entry>
      <f:entry title="Before Code"
        description="The code that is executed before the build specific code">
        <f:textarea name="pahrobuilder.beforeCode"
          value="${descriptor.getBeforeCode()}"
          default="${descriptor.defaultBeforeCode()}" />
      </f:entry>
      <f:entry title="After Code"
        description="The code that is executed after the build specific code">
        <f:textarea name="pahrobuilder.afterCode"
          value="${descriptor.getAfterCode()}"
          default="${descriptor.defaultAfterCode()}" />
      </f:entry>
  </f:section>
</j:jelly>
